
set hlsearch
set nu
set scrolloff=2
set wildmode=longest,list
set cindent
set bs=eol,start,indent
set history=256
set laststatus=2
set shiftwidth=4
set tabstop=4
set softtabstop=4
set paste
set showmatch
set smarttab
set smartindent
set noexpandtab
set ruler
set incsearch
set autoread
set autoindent
set autowrite

set exrc
set secure

" goto recent view point
au BufReadPost *
\ if line("'\"") > 0 && line("'\"") <= line("$") |
\ exe "norm g'\"" |
\ endif


set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Assuming that vundle is installed
Plugin 'gmarik/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'L9'
" Almost essential
Plugin 'The-NERD-tree'
" C, CPP plugins
Plugin 'a.vim'
Plugin 'c.vim'
" YouCompleteMe
Plugin 'Valloric/YouCompleteMe'
" Optional. nice colorscheme
Plugin 'altercation/vim-colors-solarized'

call vundle#end()
filetype plugin indent on


" YCM settings
let g:ycm_global_ycm_extra_conf = '~/.vim/.ycm_extra_conf.py'
let g:ycm_confirm_extra_conf = 0
let g:ycm_key_list_select_completion = ["<Down>"]
let g:ycm_key_list_previous_completion = ["<Up>"]
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_warning_symbol = ">*"
let g:ycm_min_num_of_chars_for_completion = 1

" NERDTree clean view
let NERDTreeIgnore = ['\.out', 'c_out', '\.class']


" copy and paste
vmap <C-c> "+y
nmap <C-v> "+p
" YouCompleteMe code. <leader> is same to backslash
nmap <leader>g :YcmCompleter GoTo<CR>
nmap <leader>f :YcmCompleter FixIt<CR>
" NERDTree
nmap <F2> :NERDTreeToggle<CR>
imap <F2> <Esc>:NERDTreeToggle<CR>
" Default window size
nmap <F11> :set lines=30 columns=100<CR>

" C, CPP
au FileType c,cpp nmap <F3> :! g++ % -o ~/c/c_out
au FileType c,cpp nmap <F4> :! gnome-terminal -x sh -c '~/c/c_out && read continue && exit; exec bash'<CR>

" JAVA
au FileType java nmap <F3> :! javac %
au FileType java nmap <F4> :! java %<
au FileType java imap <leader>sysout System.out.println();<Esc>==$hi
au FileType java nmap <leader>sysout aSystem.out.println();<Esc>==$hi
au FileType java imap {<Enter> {<CR>}<Esc>ko

" PYTHON
au FileType python nmap <F3> :! python %
"au FileType python nmap <F3> :! python3 %


if has("gui_running")
	set background=dark
	"set background=light
	colorscheme solarized
	set guioptions-=m
	set guioptions-=T
	set guioptions-=r
	set guioptions-=L
	"set lines=30 columns=100
	"set guifont=Ubuntu\ Mono\ 13
else
	set background=dark
endif
